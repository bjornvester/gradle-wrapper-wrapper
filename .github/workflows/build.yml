name: Build

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build_artifacts:
    name: Build artifacts
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    
    steps:
    - name: Add msbuild to PATH
      if: ${{ matrix.platform == 'windows-latest' }}
      uses: microsoft/setup-msbuild@v1 # https://github.com/marketplace/actions/setup-msbuild
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Validate the Gradle wrapper
      uses: gradle/wrapper-validation-action@v1 # https://github.com/gradle/wrapper-validation-action
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17
    - name: Cache the GraalVM distribution
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches/com.palantir.graal/21.3.0
        key: ${{ matrix.platform }}-graalvm-21.3.0
    - name: Build with Gradle (this action caches various parts as well)
      uses: eskatos/gradle-command-action@v1 # https://github.com/eskatos/gradle-command-action
      with:
        arguments: zipDistribution
    - name: Upload distribution
      uses: actions/upload-artifact@v2 # https://github.com/actions/upload-artifact
      with:
        name: gw
        path: build/distributions/gw*.zip
        if-no-files-found: error

  create_release:
    name: Create release
    needs: build_artifacts
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download distrubutions
        id: download
        uses: actions/download-artifact@v2 # https://github.com/actions/download-artifact
        with:
          name: gw
      - name: Display structure of downloaded files
        run: |
          pwd
          ls -R
      - name: Create release
        uses: softprops/action-gh-release@v1 # https://github.com/softprops/action-gh-release
        with:
          draft: true
          files: "*.zip"
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
